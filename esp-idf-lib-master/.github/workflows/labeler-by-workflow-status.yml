---
name: Label PRs by workflow conclusion
on:
  workflow_run:
    # when the workflows listed here complete, this workflow runs
    workflows:
      - Build examples
      - Build the documentation
      - Metadata

    types:
      - completed

jobs:
  on-completed:
    runs-on: ubuntu-latest
    steps:
      - name: Dump context for debugging
        uses: actions/github-script@v6
        with:
          script: |
            // steps receive a context from the workflow_run event
            // see:
            // https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#workflow_run
            console.log(JSON.stringify(context, null, 2))

  on-success:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Remove failure label
        uses: actions/github-script@v6
        with:
          script: |
            const util = require("util");

            label_failure_name = util.format("ci/%s/failure", context.payload.workflow_run.name);

            // when pull_requests.length is zero, that means the workflow_run
            // has no PR, e.g. workflow_run was invoked in `master`, and no
            // PR to label.
            if (context.payload.workflow_run.pull_requests.length == 0) {
              return;
            }
            try {
              await github.rest.issues.removeLabel({
                issue_number: context.payload.workflow_run.pull_requests[0].number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                name: label_failure_name
              });
            } catch(e) {
              if (!e.message.includes('Label does not exist')) {
                core.error(e);
                core.setFailed(e.message);
              }
            }

  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: Add failure label
        uses: actions/github-script@v6
        with:
          script: |
            const util = require("util");

            label_failure_name = util.format("ci/%s/failure", context.payload.workflow_run.name);

            if (context.payload.workflow_run.pull_requests.length == 0) {
              return;
            }
            try {
              await github.rest.issues.addLabels({
                issue_number: context.payload.workflow_run.pull_requests[0].number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                labels: [label_failure_name]
              });
            } catch(e) {
              core.error(e);
              core.setFailed(e.message);
            }
